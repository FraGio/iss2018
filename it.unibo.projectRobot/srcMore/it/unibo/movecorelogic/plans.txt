plan(1,init, sentence(true,addRule( directionUpToDown ),'','' ))
plan(2,init, sentence(true,addRule( FirstColumn ),'','' ))
plan(3,init, sentence(true,delay( 2000) ,'','' ))
plan(4,init, sentence(true,raise( robotCmd , robotCmd( "d") )'),'','' ))
plan(5,init, sentence(true,delay( 500) ,'','' ))
plan(6,init, sentence(true,raise( robotCmd , robotCmd( "d") )'),'','' ))
plan(7,init, sentence(true,delay( 500) ,'','' ))
plan(8,init, sentence(true,move(print("[INFO] Inizializzazione del core della logica di movimento")),'','' ))
plan(1,forwardOn, sentence(true,move(print("[INFO] Piano ForwardON ...")),'','' ))
plan(2,forwardOn, sentence(true,delay( 500) ,'','' ))
plan(3,forwardOn, sentence(true,raise( robotCmd , robotCmd( "w") )'),'','' ))
plan(1,handleRealSonarEvent, sentence(true,move(print("[INFO] Trovato un ostacolo dal sonar reale, valutazione se mobile ...")),'','' ))
plan(2,handleRealSonarEvent, sentence(true,raise( robotCmd , robotCmd( "stop") )'),'','' ))
plan(3,handleRealSonarEvent, sentence(true,delay( 2000) ,'','' ))
plan(4,handleRealSonarEvent, sentence(true,raise( robotCmd , robotCmd( "w") )'),'','' ))
plan(1,handleRealSonarEventFix, sentence(true,move(print("[INFO] Trovato ancora l'ostacolo, suppongo sia fisso")),'','' ))
plan(2,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "stop") )'),'','' ))
plan(3,handleRealSonarEventFix, sentence(true,delay( 2000) ,'','' ))
plan(4,handleRealSonarEventFix, sentence(true,move(print("[INFO] Sonar virtuale ha ostacolo fisso!")),'','' ))
plan(5,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "d") )'),'','' ))
plan(6,handleRealSonarEventFix, sentence(true,delay( 500) ,'','' ))
plan(7,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "w") )'),'','' ))
plan(8,handleRealSonarEventFix, sentence(true,delay( 800) ,'','' ))
plan(9,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "a") )'),'','' ))
plan(10,handleRealSonarEventFix, sentence(true,delay( 500) ,'','' ))
plan(11,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "w") )'),'','' ))
plan(12,handleRealSonarEventFix, sentence(true,delay( 800) ,'','' ))
plan(13,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "w") )'),'','' ))
plan(14,handleRealSonarEventFix, sentence(true,delay( 800) ,'','' ))
plan(15,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "a") )'),'','' ))
plan(16,handleRealSonarEventFix, sentence(true,delay( 500) ,'','' ))
plan(17,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "w") )'),'','' ))
plan(18,handleRealSonarEventFix, sentence(true,delay( 800) ,'','' ))
plan(19,handleRealSonarEventFix, sentence(true,raise( robotCmd , robotCmd( "d") )'),'','' ))
plan(20,handleRealSonarEventFix, sentence(true,delay( 500) ,'','' ))
plan(1,handleVirtualSonarEvent, sentence(not  justTurnedUpBottom,not here StateMoveNormal,'','' ))
plan(1,sonar2Detected, sentence(not  justTurnedBottomUp,not here StateMoveNormal,'','' ))
plan(1,stopPlan, sentence(true,raise( robotCmd , robotCmd( "stop") )'),'','' ))
plan(2,stopPlan, sentence(true,raise( coreHasFinished , coreHasFinished )'),'','' ))
plan(3,stopPlan, sentence(true,move(print("[INFO] Corelogic fermata")),'','' ))
