Fatti pull sulle repo, scaricato da chiavetta il file di immagine per il SO del raspberry.
Si vuole lavorare sia col robot virtuale che reale.
Reimpostiamo il progetto come se lo facessimo da capo.
Assicuriamoci di lanciare il radar con successo, è un componente che diamo per buono.
Il progetto a cui facciamo riferimento è il progetto "it.unibo.mbot" nella sua ultima versione.
Nuovo workspace dove copiamo il nuovo progetto.
Siamo nel punto 9 del caseStudy1, cioè il refactoring.
C'è un puro esecutore, riceve comandi e li esegue. I comandi dovrebbero muovere sia il robot fisico che virtuale, ma per ora lavoreremo solo sul virtuale (rover).
Facciamo così perchè vogliamo capire qual è il costo di passare dal mondo virtuale a quello fisico.
Si vuole partire dal workspace vuoto, si importa il progetto libs2018, si crea un nuovo progetto java "it.unibo.mbot", si copia in "src" il file mbotExecutor.qa, si converte il progetto in Xtext, si apre il file gradle cambiando il path ed eseguiamo il comando gradle in console.
Voglio far girare l'mbotExecutor, per cui dò un'occhiata al modello.
Devo generare eventi per eseguire eventi.
Come facciamo perchè all'avvio di unity venga generato un certo evento???
Guardando il codice html del prof c'è un "onmousedown", che fa il send unity addr.
Sembra che la "X" nel robotgui(w(X)) sia la velocità.
Commentata la regola "onRaspberry" nel modello, perchè al momento non sono connesso al raspberry.
Si arriva al punto in cui si ha radar aperto, si lancia l'mbotExecutor, da interfaccia si lancia unity, da interfaccia dò comandi al robot che si muove e fa comparire info sul radar.

*** completare configurazione ed arrivare al sistema funzionante ***

Una volta arrivati qui c'è un nuovo obiettivo di progetto: come posso fare per aggiungere un logger?
Un evento può essere perso, ma quando dico così sono contaminato da un'assunzione che devo esplicitare.
Noi stiamo ragionando come event-driven o event-based? Nel secondo caso può capitare che mentre facevo una cosa ho perso l'evento.
Cosa fa l'analista? Non sceglie quale dei due, chiede al committente o analizza il problema dato.
Come analista mi interessa come registro gli eventi (tipo db, file...)? Molto probabilmente no, devo confrontarmi con il committente se gli interessa solo per verificare eventi o per fare machine learning/data mining.
Nello stesso mbotExecutor posso fare un QActor che ha come scopo nella vita di visualizzare un evento (tramite print in console o su file), e si può fare sia event-driven che event-based.

*** fare questo QActor ***

*** fare in modo che quando il mbot passa sotto un sonar esso deve fermarsi. L'idea è di non mettere questa cosa dentro l'mbotExecutor ma da un'altra parte ***